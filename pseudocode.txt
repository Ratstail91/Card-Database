Commands:
	Search - search based on certain specifications
	New - add a new card to the database
	Update - update information on an existing card
	Delete - remove a card from the database
	Quit - exit the application

Startup:
	Open database, and make sure there are no errors
	if the card tables are not in the database
		check with the user that it's ok to make a new database
		make the database (standard tables)

Search:
	request commands (the conditional statements used by "WHERE"?)
	for each card:
		list each important field, and colour the mana field...

New:
	collect data on a certain card
	input fields:
		card_name
		mana_cost (XC)
		power
		toughness
	check correctness with the user
	verify that this card does not already exist in the database (name)
	generate complete dataset
	card dataset:
		internal_id
		card_name (including caps & punctuation)
		mana_cost
		converted_mana_cost
		colour
		power
		toughness
		quantity
		tags
		notes
	enter the card into the database
	move to the update command

Update:
	this can only change quantities of cards
	search for a card by name or internal id
	if the card can't be found
		show an error and exit
	get the new values
	update the database

Delete:
	search for a card by name or internal id
	verify with the user that they want to delete this card
	delete the card

-------------------------

Standards:

card entry:
	internal_id			-number, primary key
	card_name			-text, unique
	mana_cost			-text
	converted_mana_cost	-number
	colour				-number
	power				-number
	toughness			-number
	quantity			-number
--	tags				-??? (foreign key?)
--	notes				-text
end

mana_cost is saved as a text string, but parsed into other formats (such as colour and converted_mana_cost) and saved when the card is entered into the database.

colours:
	white = 1 >> 0
	blue = 1 >> 1
	black = 1 >> 2
	red = 1 >> 3
	green = 1 >> 4

for now, "tags" and "notes" are ommitted.
